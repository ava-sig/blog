services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 3s
      retries: 20
  api:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./apps/api:/app
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      CORS_ORIGIN: ${CORS_ORIGIN}
      PUBLIC_BASE_URL: ${PUBLIC_BASE_URL}
    depends_on: [db]
    # Dependencies are preinstalled on host (bind mount); just start the dev server
    command: sh -c "npm run dev"
    ports:
      - "3388:3000"
    healthcheck:
      # Use Node (already present) for an HTTP check to avoid needing curl/wget in the image
      test: ["CMD-SHELL", "node -e 'const http=require(\"http\");const req=http.request({host:\"localhost\",port:3000,path:\"/api/posts\"},res=>{process.exit(res.statusCode===200?0:1)});req.on(\"error\",()=>process.exit(1));req.end();' "]
      interval: 5s
      timeout: 5s
      retries: 40
  web:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./apps/web:/app
    environment:
      NODE_ENV: development
      NUXT_PUBLIC_API_BASE: ${NUXT_PUBLIC_API_BASE}
    depends_on: [api]
    command: sh -c "npm install && npm run dev"
    ports:
      - "5588:5000"

volumes:
  pgdata:
